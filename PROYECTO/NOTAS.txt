class SSHShellUI:
    def __init__(self, master):
        self.master = master

        self.text_area = scrolledtext.ScrolledText(master, wrap=tk.WORD, width=80, height=20, bg="black", foreground="green")
        self.text_area.pack(expand=True, fill="both")
        self.etiqueta = tk.Label(master, text="Ingresar comando", foreground="white", background="black", font=("Arial", 10))
        self.etiqueta.pack(side="left", padx=5, pady=5)
        
        self.entry = tk.Entry(master, width=80, font=("Arial", 10), bg="white", foreground="black")
        self.entry.pack(side="left", padx=5, pady=5)

        self.clear_button = tk.Button(master, text="Limpiar OutPut", command=self.limpiar_texto, font=("Arial", 10))
        self.clear_button.pack(side="left", padx=5, pady=5)

        self.entry.bind("<Return>", self.enviar_comando)  # Asociar la tecla Enter a la función enviar_comando

    def ejecutar_comando(self, comando):
        try:
            # Abrir una conexión SSH
            ssh_client = paramiko.SSHClient()
            ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            ssh_client.connect('192.168.1.49', port=22, username='kali', password='kali')
            
            # Ejecutar el comando
            stdin, stdout, stderr = ssh_client.exec_command(comando)
            
            # Leer y mostrar la salida del comando
            output = stdout.read().decode()
            error = stderr.read().decode()
            
            if output:
                self.text_area.insert(tk.END, output)
            if error:
                self.text_area.insert(tk.END, error)
            
            # Cerrar la conexión SSH
            ssh_client.close()

        except Exception as e:
            self.text_area.insert(tk.END, f"Error al ejecutar comando: {e}\n")

    def enviar_comando(self, event):
        comando_usuario = self.entry.get()
        if comando_usuario.lower() == 'exit':
            self.master.destroy()
            return

        self.ejecutar_comando(comando_usuario)
        self.entry.delete(0, tk.END)

    def limpiar_texto(self):
        self.text_area.delete(1.0, tk.END)